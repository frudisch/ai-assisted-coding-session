openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for managing user core data including creation, editing, and deletion of user information.
servers:
  - url: http://localhost:3000/api
paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../api/user.yaml'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '../api/user.yaml'
        '400':
          description: Invalid input
          content:
            application/json:
              example:
                error: "Invalid user data"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized access"
      security:
        - OAuth2: [write]
    get:
      summary: Retrieve all users
      operationId: getUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../api/user.yaml'
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized access"
      security:
        - OAuth2: [read]
  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The UUID of the user
        schema:
          type: string
          format: uuid
    put:
      summary: Update an existing user
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../api/user.yaml'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '../api/user.yaml'
        '400':
          description: Invalid input
          content:
            application/json:
              example:
                error: "Invalid user data"
        '404':
          description: User not found
          content:
            application/json:
              example:
                error: "User not found"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized access"
      security:
        - OAuth2: [write]
    delete:
      summary: Delete a user
      operationId: deleteUser
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
          content:
            application/json:
              example:
                error: "User not found"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized access"
      security:
        - OAuth2: [write]
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:3000/oauth/authorize
          tokenUrl: http://localhost:3000/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
security:
  - OAuth2: [read, write]